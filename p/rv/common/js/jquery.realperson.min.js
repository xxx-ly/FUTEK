! function(e) {
    function t(e, t) {
        return Math.floor(Math.random() * (1 + t - e)) + e
    }

    function s(e) {
        for (var t = 5381, s = 0; s < e.length; s++) t = (t << 5) + t + e.charCodeAt(s);
        return t
    }
    var a = "realperson",
        n = ["#0000FF", "#8A2BE2", "#A52A2A", "#DC143C", "#00008B", "#006400", "#556B2F", "#8B0000", "#2F4F4F", "#696969", "#4B0082", "#CD5C5C", "#191970", "#C71585", "#663399", "#8B4513", "#008080", "#4682B4"],
        l = [7, -13, 12, -5, 18, 9, -7, -11, 20, 5, 2, -18, -3, 0, -8, -22, -13, 1, 24, 21],
        r = "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        o = r + "0123456789",
        i = [
            ["   *   ", "  * *  ", "  * *  ", " *   * ", " ***** ", "*     *", "*     *"],
            ["****** ", "*     *", "*     *", "****** ", "*     *", "*     *", "****** "],
            [" ***** ", "*     *", "*      ", "*      ", "*      ", "*     *", " ***** "],
            ["****** ", "*     *", "*     *", "*     *", "*     *", "*     *", "****** "],
            ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*******"],
            ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*      "],
            [" ***** ", "*     *", "*      ", "*      ", "*   ***", "*     *", " ***** "],
            ["*     *", "*     *", "*     *", "*******", "*     *", "*     *", "*     *"],
            ["*******", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", "*******"],
            ["      *", "      *", "      *", "      *", "      *", "*     *", " ***** "],
            ["*     *", "*   ** ", "* **   ", "**     ", "* **   ", "*   ** ", "*     *"],
            ["*      ", "*      ", "*      ", "*      ", "*      ", "*      ", "*******"],
            ["*     *", "**   **", "* * * *", "*  *  *", "*     *", "*     *", "*     *"],
            ["*     *", "**    *", "* *   *", "*  *  *", "*   * *", "*    **", "*     *"],
            [" ***** ", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],
            ["****** ", "*     *", "*     *", "****** ", "*      ", "*      ", "*      "],
            [" ***** ", "*     *", "*     *", "*     *", "*   * *", "*    * ", " **** *"],
            ["****** ", "*     *", "*     *", "****** ", "*   *  ", "*    * ", "*     *"],
            [" ***** ", "*     *", "*      ", " ***** ", "      *", "*     *", " ***** "],
            ["*******", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", "   *   "],
            ["*     *", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],
            ["*     *", "*     *", " *   * ", " *   * ", "  * *  ", "  * *  ", "   *   "],
            ["*     *", "*     *", "*     *", "*  *  *", "* * * *", "**   **", "*     *"],
            ["*     *", " *   * ", "  * *  ", "   *   ", "  * *  ", " *   * ", "*     *"],
            ["*     *", " *   * ", "  * *  ", "   *   ", "   *   ", "   *   ", "   *   "],
            ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*******"],
            ["  ***  ", " *   * ", "*   * *", "*  *  *", "* *   *", " *   * ", "  ***  "],
            ["   *   ", "  **   ", " * *   ", "   *   ", "   *   ", "   *   ", "*******"],
            [" ***** ", "*     *", "      *", "     * ", "   **  ", " **    ", "*******"],
            [" ***** ", "*     *", "      *", "    ** ", "      *", "*     *", " ***** "],
            ["    *  ", "   **  ", "  * *  ", " *  *  ", "*******", "    *  ", "    *  "],
            ["*******", "*      ", "****** ", "      *", "      *", "*     *", " ***** "],
            ["  **** ", " *     ", "*      ", "****** ", "*     *", "*     *", " ***** "],
            ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*      "],
            [" ***** ", "*     *", "*     *", " ***** ", "*     *", "*     *", " ***** "],
            [" ***** ", "*     *", "*     *", " ******", "      *", "     * ", " ****  "]
        ];
    e.JQPlugin.createPlugin({
        name: a,
        alphabetic: r,
        alphanumeric: o,
        defaultDots: i,
        defaultOptions: {
            length: 6,
            regenerate: "Click to change",
            hashName: "{n}_hash",
            dot: "*",
            dots: i,
            chars: r
        },
        _getters: ["getHash", "getMatched"],
        _challengeClass: a + "-challenge",
        _disabledClass: a + "-disabled",
        _hashClass: a + "-hash",
        _regenerateClass: a + "-regen",
        _textClass: a + "-text",
        _optionsChanged: function(t, a, n) {
            e.extend(a.options, n);
            for (var l = "", r = 0; r < a.options.length; r++) l += a.options.chars.charAt(Math.floor(Math.random() * a.options.chars.length));
            a.hash = s(l + h);
            var o = this;
            t.closest("form").off("." + a.name).on("submit." + a.name, function() {
                var n = a.options.hashName.replace(/\{n\}/, t.attr("name")),
                    r = e(this);
                r.find('input[name="' + n + '"]').remove(), r.append('<input type="hidden" class="' + o._hashClass + '" name="' + n + '" value="' + s(l + h) + '">'), setTimeout(function() {
                    r.find('input[name="' + n + '"]').remove()
                }, 0)
            }), t.prevAll("." + this._challengeClass + ",." + this._hashClass).remove().end().before(this._generateHTML(a, l)).prevAll("div." + this._challengeClass).click(function() {
                e(this).hasClass(o._disabledClass) || t.realperson("option", {})
            })
        },
        enable: function(t) {
            t = e(t), t.hasClass(this._getMarker()) && t.removeClass(this._disabledClass).prop("disabled", !1).prevAll("." + this._challengeClass).removeClass(this._disabledClass)
        },
        disable: function(t) {
            t = e(t), t.hasClass(this._getMarker()) && t.addClass(this._disabledClass).prop("disabled", !0).prevAll("." + this._challengeClass).addClass(this._disabledClass)
        },
        getHash: function(e) {
            var t = this._getInst(e);
            return t ? t.hash : 0
        },
        getMatched: function(t) {
            var a = e(t),
                n = a.closest(".form-group"),
                l = n.find(".help-block.with-errors"),
                r = this.getHash(t) == s(a.val().toUpperCase());
            return r || (n.addClass("has-error"), l.empty().append("Code does not match")), r
        },
        _supportSvg: function() {
            return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        },
        _generateHTML: function(s, a) {
            var r = e('<div class="' + this._textClass + '"></div>'),
                o = "http://www.w3.org/2000/svg";
            if (this._supportSvg()) {
                var i = e(document.createElementNS(o, "svg")).attr("width", 92).attr("height", 30);
                setTimeout(function() {
                    for (var e = r.find("svg")[0], s = 6, i = 20, h = 0; h < a.length; h++) {
                        var d = document.createElementNS(o, "text"),
                            p = document.createTextNode(a.charAt(h).toLowerCase());
                        d.appendChild(p), d.setAttributeNS(null, "x", s), d.setAttributeNS(null, "y", i), d.setAttributeNS(null, "fill", n[t(0, n.length - 1)]), d.setAttributeNS(null, "transform", "rotate(" + l[t(0, l.length - 1)] + "," + s + "," + i + ")"), e.appendChild(d), s += 14
                    }
                }, 100), r.append(i)
            } else {
                for (var h = "", d = 0; d < s.options.dots[0].length; d++) {
                    for (var p = 0; p < a.length; p++) h += s.options.dots[s.options.chars.indexOf(a.charAt(p))][d].replace(/ /g, "&#160;").replace(/\*/g, s.options.dot) + "&#160;&#160;";
                    h += "<br>"
                }
                r.append(h)
            }
            return e('<div class="' + this._challengeClass + '"></div>').append(r).append('<div class="' + this._regenerateClass + '">' + s.options.regenerate + "</div>")
        },
        _preDestroy: function(e, t) {
            e.closest("form").off("." + t.name), e.prevAll("." + this._challengeClass + ",." + this._hashClass).remove()
        }
    });
    var h = e.salt || "#salt";
    delete e.salt, e(function() {
        var t = e(h);
        t.length && (h = t.text(), t.remove()), "#salt" === h && (h = "")
    })
}(jQuery);